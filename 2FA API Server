## bash ##

# Install Required Software
sudo apt update
sudo apt install python3 python3-pip sqlite3
pip3 install flask

# Create the Database
sqlite3 keys.db

# In the SQLite shell, create a table to store the keys:
CREATE TABLE keys (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    key TEXT NOT NULL,
    expiration TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
.exit

## python ##

# Python Application: key_generator.py

from flask import Flask, jsonify
import sqlite3
import secrets

app = Flask(__name__)
db_path = 'keys.db'

@app.route('/generate_key')
def generate_key():
    key = secrets.token_hex(16)  # Generate a random key
    with sqlite3.connect(db_path) as conn:
        cursor = conn.cursor()
        cursor.execute("INSERT INTO keys (key) VALUES (?)", (key,))
        conn.commit()
    return jsonify({'key': key})

@app.route('/get_key')
def get_key():
    with sqlite3.connect(db_path) as conn:
        cursor = conn.cursor()
        cursor.execute("SELECT key FROM keys ORDER BY expiration DESC LIMIT 1")
        key = cursor.fetchone()
    return jsonify({'key': key[0] if key else None})

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)

## bash ##

# Run the Application
python3 key_generator.py

## bash ##

# Accessing the API
# Generate a key
curl http://your-server-ip:5000/generate_key

# Retrieve the latest key
curl http://your-server-ip:5000/get_key

## bash ##

# Automate Key Generation
# Open crontab
crontab -e

# Add a line to call the API endpoint. For example, to generate a key every day at midnight:
0 0 * * * curl -X GET http://your-server-ip:5000/generate_key
